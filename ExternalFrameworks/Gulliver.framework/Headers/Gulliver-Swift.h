// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIEvent;
@class NSCoder;

SWIFT_CLASS("_TtC8Gulliver22FullScreenBlockingView")
@interface FullScreenBlockingView : UIView
@property (nonatomic, copy) void (^ __nullable dismissClosure)(void);
+ (FullScreenBlockingView * __nonnull)blockerForViews:(NSArray<UIView *> * __nonnull)targets closure:(void (^ __nullable)(void))closure;
- (UIView * __nullable)hitTest:(CGPoint)point withEvent:(UIEvent * __nullable)event;
- (void)dismiss;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSProgress (SWIFT_EXTENSION(Gulliver))
@property (nonatomic) BOOL isDisplayedProgress;
@end


SWIFT_CLASS("_TtC8Gulliver24NetworkActivityIndicator")
@interface NetworkActivityIndicator : NSObject
+ (void)increment;
+ (void)decrement;
- (void)hideIndicator;
+ (BOOL)isVisible;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP8Gulliver19ProgressDisplayable_")
@protocol ProgressDisplayable
@property (nonatomic) double fractionCompleted;
@property (nonatomic) BOOL indeterminate;
- (void)progressDisplayBegan;
- (void)progressDisplayCompleted;
@end

@protocol ProgressDisplayableView;
@class UILabel;
@class UIButton;
@class UIColor;

SWIFT_CLASS("_TtC8Gulliver15ProgressDisplay")
@interface ProgressDisplay : UIView <ProgressDisplayable>
@property (nonatomic, copy) NSString * __nonnull title;
@property (nonatomic, copy) NSString * __nonnull detailText;
@property (nonatomic, strong) id <ProgressDisplayableView> __nullable determinateView;
@property (nonatomic, strong) id <ProgressDisplayableView> __nullable indeterminateView;
@property (nonatomic, strong) UILabel * __null_unspecified titleLabel;
@property (nonatomic, strong) UILabel * __null_unspecified detailLabel;
@property (nonatomic, strong) UIButton * __nullable button;
@property (nonatomic, strong) UIColor * __nonnull textColor;
@property (nonatomic) BOOL closeWhenComplete;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) double fractionCompleted;
@property (nonatomic) BOOL indeterminate;
- (ProgressDisplay * __nonnull)close:(BOOL)animated completion:(void (^ __nullable)(void))completion;
- (void)progressDisplayBegan;
- (void)progressDisplayCompleted;
- (ProgressDisplay * __nonnull)show:(BOOL)animated;
- (ProgressDisplay * __nonnull)hide:(BOOL)animated completion:(void (^ __nullable)(void))completion;
- (void)layoutSubviews;
@end



SWIFT_PROTOCOL("_TtP8Gulliver23ProgressDisplayableView_")
@protocol ProgressDisplayableView
@property (nonatomic) double fractionCompleted;
@property (nonatomic, readonly, strong) UIView * __nonnull view;
@property (nonatomic, readonly) BOOL isIndeterminateDisplay;
@end


@interface UIActivityIndicatorView (SWIFT_EXTENSION(Gulliver)) <ProgressDisplayableView>
@property (nonatomic) double fractionCompleted;
@property (nonatomic, readonly, strong) UIView * __nonnull view;
@property (nonatomic, readonly) BOOL isIndeterminateDisplay;
+ (UIActivityIndicatorView * __nonnull)progressDisplay;
@end

@class NSError;

@interface UIAlertController (SWIFT_EXTENSION(Gulliver))
+ (UIAlertController * __nonnull)showAlert:(NSError * __nonnull)error title:(NSString * __nonnull)title;
+ (UIAlertController * __nonnull)showAlert:(NSString * __nonnull)title message:(NSString * __nullable)message buttons:(NSArray<NSString *> * __nonnull)buttons block:(void (^ __nonnull)(NSInteger))block;
+ (void)showNextPendingController;
- (void)present;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)cancel:(BOOL)animated completion:(void (^ __nullable)(void))completion;
+ (NSInteger)numberOfPendingAlerts;
@end


@interface UIProgressView (SWIFT_EXTENSION(Gulliver)) <ProgressDisplayableView>
@property (nonatomic) double fractionCompleted;
@property (nonatomic, readonly, strong) UIView * __nonnull view;
@property (nonatomic, readonly) BOOL isIndeterminateDisplay;
+ (UIProgressView * __nonnull)progressDisplay;
@end


@interface UITextField (SWIFT_EXTENSION(Gulliver))
@end


@interface UIViewController (SWIFT_EXTENSION(Gulliver)) <UITextFieldDelegate>
@end

@class NSBundle;
@class UINavigationController;

@interface UIViewController (SWIFT_EXTENSION(Gulliver))
+ (UIViewController * __nonnull)controller;
- (nonnull instancetype)initWithBundle:(NSBundle * __nullable)bundle;
+ (NSString * __nullable)nibName;
- (UINavigationController * __nonnull)navigationWrappedController:(BOOL)hideNavigationBar;
+ (UIViewController * __nullable)frontmostController;
- (void)setTabOrder:(NSArray<UIView *> * __nonnull)order withEndOfOrderClosure:(void (^ __nullable)(UIViewController * __nonnull))closure;
@property (nonatomic, readonly, copy) NSArray<UIView *> * __nonnull tabOrder;
- (BOOL)textFieldShouldReturn:(UITextField * __nonnull)textField;
- (BOOL)textField:(UITextField * __nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * __nonnull)string;
@end


@interface UIWindow (SWIFT_EXTENSION(Gulliver))
+ (UIWindow * __nullable)rootWindow;
@end

#pragma clang diagnostic pop
