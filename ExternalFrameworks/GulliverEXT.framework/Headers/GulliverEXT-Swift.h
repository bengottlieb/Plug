// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import UIKit;
@import AudioToolbox;
@import CoreGraphics;
@import Dispatch;
@import Foundation;
@import CoreData;
@import MessageUI;
@import AVFoundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSURL;
@class NSTimer;

SWIFT_CLASS("_TtC11GulliverEXT11SoundEffect")
@interface SoundEffect : NSObject
+ (NSDictionary<NSString *, SoundEffect *> * _Nonnull)cachedSounds;
+ (void)setCachedSounds:(NSDictionary<NSString *, SoundEffect *> * _Nonnull)value;
+ (NSArray<SoundEffect *> * _Nonnull)playingSounds;
+ (void)setPlayingSounds:(NSArray<SoundEffect *> * _Nonnull)value;
+ (SoundEffect * _Nullable)soundEffectFromURL:(NSURL * _Nonnull)url;
+ (SoundEffect * _Nullable)preflightSound:(NSString * _Nonnull)name;
+ (BOOL)playSound:(NSString * _Nonnull)name;
- (nullable instancetype)initWithUrl:(NSURL * _Nullable)url preload:(BOOL)preload OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithName:(NSString * _Nonnull)name preload:(BOOL)preload;
- (BOOL)play;
- (void)pause;
@property (nonatomic, readonly) BOOL isPlaying;
@property (nonatomic, weak) NSTimer * _Nullable dequeueTimer;
- (void)unregsterAsPlaying;
@end

@class AVAudioPlayer;

SWIFT_CLASS("_TtC11GulliverEXT8WAVSound")
@interface WAVSound : SoundEffect
@property (nonatomic, readonly, strong) NSURL * _Null_unspecified URL;
@property (nonatomic, strong) AVAudioPlayer * _Null_unspecified player;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nullable instancetype)initWithUrl:(NSURL * _Nullable)url preload:(BOOL)preload OBJC_DESIGNATED_INITIALIZER;
- (BOOL)play;
- (void)pause;
@property (nonatomic, readonly) BOOL isPlaying;
@end


SWIFT_CLASS("_TtC11GulliverEXT9AIFFSound")
@interface AIFFSound : WAVSound
- (nullable instancetype)initWithUrl:(NSURL * _Nullable)url preload:(BOOL)preload OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;
@class NSAttributedString;
@class NSLayoutConstraint;
@class NSCoder;

SWIFT_CLASS("_TtC11GulliverEXT23AttributedTableViewCell")
@interface AttributedTableViewCell : UITableViewCell
@property (nonatomic, strong) UILabel * _Null_unspecified attributedLabel;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedText;
@property (nonatomic, copy) NSArray<NSLayoutConstraint *> * _Nonnull labelConstraints;
@property (nonatomic) UIEdgeInsets edgeInsets;
- (void)setupConstraints;
- (void)didMoveToSuperview;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11GulliverEXT8CAFSound")
@interface CAFSound : SoundEffect
+ (SystemSoundID)soundIDCount;
+ (void)setSoundIDCount:(SystemSoundID)value;
@property (nonatomic, strong) NSURL * _Nullable URL;
- (nullable instancetype)initWithName:(NSString * _Nonnull)name preload:(BOOL)preload;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nullable instancetype)initWithUrl:(NSURL * _Nullable)url preload:(BOOL)preload OBJC_DESIGNATED_INITIALIZER;
- (BOOL)play;
@end

@class NSBundle;

SWIFT_CLASS("_TtC11GulliverEXT23ContainerViewController")
@interface ContainerViewController : UIViewController
@property (nonatomic, strong) UIViewController * _Nullable currentController;
- (nonnull instancetype)initWithInitialViewController:(UIViewController * _Nonnull)initialViewController;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11GulliverEXT28HeightChangedCallbackWrapper")
@interface HeightChangedCallbackWrapper : NSObject
@property (nonatomic, readonly, copy) void (^ _Nonnull block)(CGFloat);
- (nonnull instancetype)init:(void (^ _Nonnull)(CGFloat))blk OBJC_DESIGNATED_INITIALIZER;
@end

@class NSManagedObjectModel;
@class NSPersistentStoreCoordinator;
@class NSManagedObjectContext;
@class NSNotification;

SWIFT_CLASS("_TtC11GulliverEXT18ManagedObjectStore")
@interface ManagedObjectStore : NSObject
@property (nonatomic, readonly, strong) NSManagedObjectModel * _Nonnull model;
@property (nonatomic, readonly, strong) NSPersistentStoreCoordinator * _Nonnull persistentStoreCoordinator;
@property (nonatomic, strong) NSManagedObjectContext * _Null_unspecified mainThreadContext;
@property (nonatomic, readonly, strong) NSURL * _Nonnull storeURL;
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nonnull privateContext;
+ (NSURL * _Nullable)modelURL;
+ (void)setModelURL:(NSURL * _Nullable)value;
+ (NSString * _Nullable)filename;
+ (void)setFilename:(NSString * _Nullable)value;
+ (NSString * _Nonnull)groupIdentifier;
+ (void)setGroupIdentifier:(NSString * _Nonnull)value;
+ (NSURL * _Nullable)storeDirectoryURL;
+ (void)setStoreDirectoryURL:(NSURL * _Nullable)value;
+ (NSString * _Nullable)modelName;
+ (NSURL * _Nullable)generatedModelURL;
+ (void)preload;
- (nonnull instancetype)initWithModelURL:(NSURL * _Nullable)modelURL filename:(NSString * _Nullable)filename options:(NSDictionary<NSString *, id> * _Nonnull)opts OBJC_DESIGNATED_INITIALIZER;
- (void)setup;
@property (nonatomic, readonly, strong) dispatch_group_t _Null_unspecified saveDispatchGroup;
- (void)contextDidSave:(NSNotification * _Nonnull)note;
- (NSManagedObjectContext * _Nonnull)createWorkerContext;
- (void)importBlock:(void (^ _Nonnull)(NSManagedObjectContext * _Nonnull))block;
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key;
- (void)setObject:(id _Nullable)newValue forKeyedSubscript:(NSString * _Nonnull)key;
@end


@interface NSAttributedString (SWIFT_EXTENSION(GulliverEXT))
- (NSAttributedString * _Nonnull)stringByAppendingString:(NSAttributedString * _Nonnull)string;
- (NSAttributedString * _Nonnull)stringByAppendingString:(NSString * _Nonnull)string attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
@end


@interface NSAttributedString (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic, readonly) CGFloat width;
- (CGFloat)height:(CGFloat)constrainedToWidth;
@end


@interface NSData (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic, readonly, copy) NSString * _Nonnull hexString;
- (nullable instancetype)initWithHexString:(NSString * _Nonnull)hexString;
@property (nonatomic, readonly, copy) NSString * _Nullable string;
@end


@interface NSDate (SWIFT_EXTENSION(GulliverEXT))
@end


@interface NSDate (SWIFT_EXTENSION(GulliverEXT))
+ (NSString * _Nonnull)ageString:(NSTimeInterval)age style:(NSDateFormatterStyle)style;
@end


@interface NSDate (SWIFT_EXTENSION(GulliverEXT))
- (NSString * _Nonnull)durationStringRelativeTo:(NSDate * _Nonnull)date;
@end


@interface NSDate (SWIFT_EXTENSION(GulliverEXT))
- (NSString * _Nonnull)localTimeString:(NSDateFormatterStyle)dateStyle timeStyle:(NSDateFormatterStyle)timeStyle;
@property (nonatomic, readonly) BOOL isToday;
@property (nonatomic, readonly) BOOL isTomorrow;
@property (nonatomic, readonly) BOOL isYesterday;
- (NSDate * _Nonnull)dateBySettingDate:(NSDate * _Nullable)date;
- (NSDate * _Nonnull)dateBySettingTime:(NSDate * _Nullable)time;
@property (nonatomic, readonly, strong) NSDate * _Nonnull dateOnly;

/// returns midnight on the day in question
@property (nonatomic, readonly, strong) NSDate * _Nonnull timeOnly;

/// just returns the current date, since we're only interested in the time
@property (nonatomic, readonly, strong) NSDate * _Nonnull midnight;
@property (nonatomic, readonly, strong) NSDate * _Nonnull lastSecond;
@property (nonatomic, readonly) NSInteger year;
@property (nonatomic, readonly) NSInteger day;
@property (nonatomic, readonly) NSInteger hour;
@property (nonatomic, readonly) NSInteger minute;
@property (nonatomic, readonly) NSInteger second;
@property (nonatomic, readonly, strong) NSDate * _Nonnull nextDay;
@property (nonatomic, readonly, strong) NSDate * _Nonnull previousDay;
@property (nonatomic, readonly, strong) NSDate * _Nonnull noon;
- (BOOL)isAfter:(NSDate * _Nonnull)date;
- (BOOL)isBefore:(NSDate * _Nonnull)date;
- (BOOL)isSameDayAs:(NSDate * _Nonnull)other;
@end


@interface NSError (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic, readonly) BOOL isTimeout;
@property (nonatomic, readonly) BOOL isNoConnection;
@property (nonatomic, readonly, copy) NSArray<NSError *> * _Nonnull underlyingErrors;
@end


@interface NSFileManager (SWIFT_EXTENSION(GulliverEXT))
- (BOOL)fileExistsAtURL:(NSURL * _Nonnull)url;
- (BOOL)directoryExistsAtURL:(NSURL * _Nonnull)url;
+ (NSURL * _Nullable)userDirectory:(NSSearchPathDirectory)type;
+ (NSURL * _Nonnull)documentsDirectoryURL;
+ (NSURL * _Nonnull)libraryDirectoryURL;
+ (NSURL * _Nonnull)applicationSupportDirectoryURL;
+ (NSURL * _Nonnull)cachesDirectoryURL;
+ (NSURL * _Nonnull)tempDirectoryURL;
@end

@class ThreadsafeToken;

@interface NSManagedObject (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic, readonly, strong) ThreadsafeToken * _Nonnull threadsafeToken;
@end


@interface NSManagedObject (SWIFT_EXTENSION(GulliverEXT))
- (void)importDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSManagedObject * _Nullable)importRelationship:(NSString * _Nonnull)name fromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSManagedObject * _Nullable)findExistingRelationship:(NSString * _Nonnull)entityName forDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSManagedObject * _Nullable)addRelationship:(NSString * _Nonnull)name fromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSString * _Nullable)dictionaryKeyToAttributeName:(NSString * _Nonnull)key;
- (NSDate * _Nullable)dictionaryStringToDate:(NSString * _Nonnull)string;
@end


@interface NSManagedObject (SWIFT_EXTENSION(GulliverEXT))
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key;
- (void)setObject:(id _Nullable)newValue forKeyedSubscript:(NSString * _Nonnull)key;
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nullable moc;
- (NSManagedObject * _Nullable)objectInContext:(NSManagedObjectContext * _Nonnull)moc;
- (void)log;
- (void)refreshInContext:(BOOL)merge;
+ (NSString * _Nonnull)entityName;
- (void)deleteFromContext;
- (BOOL)hasPropertyForKey:(NSString * _Nonnull)key;
@end


@interface NSManagedObjectContext (SWIFT_EXTENSION(GulliverEXT))
@end

@class NSPredicate;
@class NSFetchRequest;
@class NSSortDescriptor;

@interface NSManagedObjectContext (SWIFT_EXTENSION(GulliverEXT))
- (NSManagedObject * _Nonnull)insertEntityNamed:(NSString * _Nonnull)name;
- (NSInteger)count:(NSString * _Nonnull)entityName predicate:(NSPredicate * _Nullable)predicate;
- (void)saveAndWait:(BOOL)wait toDisk:(BOOL)toDisk completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)refreshAllFaults;
- (NSFetchRequest * _Nonnull)fetchRequest:(NSString * _Nonnull)name;
- (NSManagedObject * _Nullable)insertObjectNamed:(NSString * _Nonnull)entityName;
- (NSArray<NSManagedObject *> * _Nonnull)allObjects:(NSString * _Nonnull)entityName predicate:(NSPredicate * _Nullable)predicate sortedBy:(NSArray<NSSortDescriptor *> * _Nonnull)sortedBy;
- (NSManagedObject * _Nullable)anyObjectNamed:(NSString * _Nonnull)entityName predicate:(NSPredicate * _Nullable)predicate sortBy:(NSArray<NSSortDescriptor *> * _Nonnull)sortBy;
@end


@interface NSMutableAttributedString (SWIFT_EXTENSION(GulliverEXT))
- (void)addLineBreakOfHeight:(CGFloat)height;
@end


@interface NSMutableAttributedString (SWIFT_EXTENSION(GulliverEXT))
@end


@interface NSMutableAttributedString (SWIFT_EXTENSION(GulliverEXT))
- (void)appendString:(NSString * _Nonnull)string attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)assignAttributes:(NSDictionary<NSString *, id> * _Nonnull)attr toUniqueSubstring:(NSString * _Nonnull)text;
@end

@class NSDictionary;

@interface NSNotification (SWIFT_EXTENSION(GulliverEXT))
+ (void)postNotification:(NSString * _Nonnull)name object:(id _Nullable)object userInfo:(NSDictionary * _Nullable)userInfo;
+ (void)postNotificationOnMainThread:(NSString * _Nonnull)name object:(id _Nullable)object userInfo:(NSDictionary * _Nullable)userInfo;
@end


@interface NSObject (SWIFT_EXTENSION(GulliverEXT))
- (void)addAsObserver:(NSString * _Nonnull)name selector:(SEL _Null_unspecified)sel object:(id _Nullable)object;
- (void)removeAsObserver:(NSString * _Nullable)notificationName;
@end


@interface NSOperationQueue (SWIFT_EXTENSION(GulliverEXT))
- (nonnull instancetype)initWithSerial:(BOOL)serial;
- (void)addOperationWithBlockAndWait:(void (^ _Nonnull)(void))block;
@end

@class NSMutableParagraphStyle;

@interface NSParagraphStyle (SWIFT_EXTENSION(GulliverEXT))
+ (NSMutableParagraphStyle * _Nonnull)aligned:(NSTextAlignment)alignment;
@end


@interface NSTimer (SWIFT_EXTENSION(GulliverEXT))
+ (NSTimer * _Nonnull)scheduledTimerOnMainThread:(NSTimeInterval)ti target:(id _Nonnull)target selector:(SEL _Null_unspecified)selector userInfo:(id _Nullable)userInfo repeats:(BOOL)repeats;
@end


@interface NSUserDefaults (SWIFT_EXTENSION(GulliverEXT))
+ (void)setCurrentDefaultsGroup:(NSString * _Nonnull)group;
+ (NSUserDefaults * _Nonnull)defaults;
+ (BOOL)hasValueForKey:(NSString * _Nonnull)key;
+ (void)removeValueForKey:(NSString * _Nonnull)key;
@end


@interface NSUserDefaults (SWIFT_EXTENSION(GulliverEXT))
- (BOOL)hasValueForKey:(NSString * _Nonnull)key;
- (void)removeValueForKey:(NSString * _Nonnull)key;
@end

@protocol NSObject;
@class Watcher;

SWIFT_CLASS("_TtC11GulliverEXT8Notifier")
@interface Notifier : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
- (nonnull instancetype)init:(NSString * _Nonnull)nm OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) NSOperationQueue * _Nonnull serializer;
- (void)unwatch:(NSObject * _Nonnull)observer object:(NSObject * _Nullable)object;
- (void)unwatch:(id <NSObject> _Nonnull)token;
@property (nonatomic, copy) NSArray<Watcher *> * _Nonnull watchers;
- (void)unregister:(Watcher * _Nonnull)watcher;
- (void)clean:(BOOL)serialized;
@end


@interface Notifier (SWIFT_EXTENSION(GulliverEXT))
@end


SWIFT_CLASS("_TtC11GulliverEXT28SA_MailComposeViewController")
@interface SA_MailComposeViewController : MFMailComposeViewController <MFMailComposeViewControllerDelegate>
@property (nonatomic, copy) void (^ _Nullable completion)(MFMailComposeResult);
- (nullable instancetype)initToAddress:(NSString * _Nonnull)toAddress subject:(NSString * _Nullable)subject body:(NSString * _Nullable)body completion:(void (^ _Nullable)(MFMailComposeResult))comp;
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;
@class UIView;

SWIFT_CLASS("_TtC11GulliverEXT16SA_TableViewCell")
@interface SA_TableViewCell : UITableViewCell
@property (nonatomic, strong) UIColor * _Nullable dividerColor;
@property (nonatomic, strong) UIView * _Nullable dividerView;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@class NSMutableArray;

SWIFT_CLASS("_TtC11GulliverEXT11SoundPlayer")
@interface SoundPlayer : NSObject <AVAudioPlayerDelegate>
+ (SoundPlayer * _Nonnull)player;
@property (nonatomic, strong) NSMutableArray * _Nonnull players;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)playWAV:(NSString * _Nonnull)name directory:(NSString * _Nullable)directory;
- (BOOL)play:(NSString * _Nonnull)name directory:(NSString * _Nullable)directory;
- (BOOL)playAIFF:(NSString * _Nonnull)name directory:(NSString * _Nullable)directory;
- (BOOL)playSoundAtURL:(NSURL * _Nonnull)url;
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer * _Nonnull)player successfully:(BOOL)flag;
@end


@interface UIBezierPath (SWIFT_EXTENSION(GulliverEXT))
- (void)appendString:(NSAttributedString * _Nonnull)string atPoint:(CGPoint)pt withTransform:(CGAffineTransform)withTransform;
@end

@class UITapGestureRecognizer;

SWIFT_CLASS("_TtC11GulliverEXT14UIBlockingView")
@interface UIBlockingView : UIView
@property (nonatomic, copy) void (^ _Nullable tappedClosure)(void);
- (void)tapped:(UITapGestureRecognizer * _Nonnull)recog;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;
@class UIFont;

@interface UIButton (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIFont * _Nullable textFont;
@end

@class UICollectionViewCell;

@interface UICollectionView (SWIFT_EXTENSION(GulliverEXT))
- (void)registerCellClass:(SWIFT_METATYPE(UICollectionViewCell) _Nonnull)cellClass;
@end

@class UINib;

@interface UICollectionViewCell (SWIFT_EXTENSION(GulliverEXT))
+ (NSString * _Nonnull)identifier;
+ (UINib * _Nonnull)nib;
@end


@interface UIColor (SWIFT_EXTENSION(GulliverEXT))
- (nullable instancetype)initWithHex:(NSString * _Nonnull)hex;
@property (nonatomic, readonly, copy) NSString * _Nonnull hex;
@end


@interface UIColor (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic, readonly) uint32_t rgba;
@property (nonatomic, readonly) uint32_t argb;
- (nonnull instancetype)initWithRgba:(uint32_t)rgba;
- (nonnull instancetype)initWithArgb:(uint32_t)argb;
@end


@interface UIDevice (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic, readonly) BOOL isIPad;
@end


@interface UIFont (SWIFT_EXTENSION(GulliverEXT))
- (CGSize)sizeOfString:(NSString * _Nonnull)string constrainedToWidth:(CGFloat)width;
@end


@interface UIImage (SWIFT_EXTENSION(GulliverEXT))
- (UIImage * _Nonnull)tintedImage:(UIColor * _Nonnull)tint;
- (UIImage * _Nonnull)scaledImage:(CGFloat)scale;
- (UIImage * _Nonnull)resizedImage:(CGSize)size trimmed:(BOOL)trimmed;
+ (UIImage * _Nullable)deviceLaunchImage:(UIDeviceOrientation)orientation;
+ (NSURL * _Nullable)deviceLaunchImageURL:(UIDeviceOrientation)orientation;
@property (nonatomic, readonly) BOOL hasAlpha;
@end


@interface UIImageView (SWIFT_EXTENSION(GulliverEXT))
+ (UIImageView * _Nullable)deviceLaunchImageView:(UIInterfaceOrientation)orientation;
@end


@interface UILabel (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic, readonly, strong) UIFont * _Nonnull actualFontInUse;
@end


@interface UIScrollView (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic) BOOL resizesForKeyboard;
- (void)setResizesForKeyboard:(BOOL)resizes heightChanged:(void (^ _Nonnull)(CGFloat))heightChanged;
- (void)callHeightShared:(CGFloat)delta;
- (void)gulliver_keyboardWillShow:(NSNotification * _Nonnull)note;
- (void)gulliver_keyboardWillHide:(NSNotification * _Nonnull)note;
@end


@interface UITableView (SWIFT_EXTENSION(GulliverEXT))
- (void)registerCellClass:(SWIFT_METATYPE(UITableViewCell) _Nonnull)cellClass;
@end


@interface UITableViewCell (SWIFT_EXTENSION(GulliverEXT))
+ (NSString * _Nonnull)identifier;
+ (UINib * _Nonnull)nib;
@end


@interface UIView (SWIFT_EXTENSION(GulliverEXT))
- (void)setupShadow:(UIColor * _Nonnull)color radius:(CGFloat)radius offset:(CGSize)offset opacity:(float)opacity;
@end


@interface UIView (SWIFT_EXTENSION(GulliverEXT))
- (NSLayoutConstraint * _Nullable)existingAttributeConstraint:(NSLayoutAttribute)attr;
- (void)constrainWidth:(CGFloat)width priority:(UILayoutPriority)priority;
- (void)constrainHeight:(CGFloat)height priority:(UILayoutPriority)priority;
- (void)addDimensionConstraint:(NSLayoutAttribute)attribute constant:(CGFloat)constant priority:(UILayoutPriority)priority;
- (void)removeAllConstraints;
@end


@interface UIView (SWIFT_EXTENSION(GulliverEXT))
+ (UIView * _Nullable)view:(NSString * _Nullable)nibName bundle:(NSBundle * _Nonnull)bundle;
@property (nonatomic, readonly) CGPoint contentCenter;
- (void)resignFirstResponderForAllSubviews;
- (UIView * _Nonnull)blockingViewWithTappedClosure:(void (^ _Nullable)(void))closure;
@property (nonatomic, readonly, strong) UIViewController * _Nullable viewController;
@property (nonatomic, readonly, strong) UITableViewCell * _Nullable tableViewCell;
- (NSString * _Nonnull)hierarchy:(NSString * _Nullable)prefix;
- (BOOL)isAncestor:(UIView * _Nullable)view;
@property (nonatomic, readonly, strong) UIImage * _Nullable snapshot;
@end


@interface UIView (SWIFT_EXTENSION(GulliverEXT))
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@property (nonatomic) CGPoint origin;
@property (nonatomic) CGSize size;
@end


#pragma clang diagnostic pop
